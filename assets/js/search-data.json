{
  
    
        "post0": {
            "title": "Bash Notebook",
            "content": "Hack 1 - Verifying tool installation . echo &quot;Verifying tools...&quot; echo &quot;Python3 version:&quot; python3 --version echo &quot;Pip version:&quot; pip --version echo &quot;Python2 version:&quot; python2 --version echo &quot;Java version:&quot; java --version echo &quot;Javac version:&quot; javac --version echo &quot;Tool verification done&quot; . Verifying tools... Python3 version: Python 3.9.12 Pip version: pip 21.2.4 from /home/junlim954/anaconda3/lib/python3.9/site-packages/pip (python 3.9) Python2 version: Python 2.7.18 Java version: openjdk 11.0.16 2022-07-19 OpenJDK Runtime Environment (build 11.0.16+8-post-Ubuntu-0ubuntu120.04) OpenJDK 64-Bit Server VM (build 11.0.16+8-post-Ubuntu-0ubuntu120.04, mixed mode, sharing) Javac version: javac 11.0.16 Tool verification done . Hack 2 - Verification with Anaconda . echo &quot;Checking directory...&quot; pwd echo &quot;Listing files...&quot; ls echo &quot;Anaconda version:&quot; conda --version echo &quot;Npm version:&quot; npm -version jupyter kernelspec list . Checking directory... /home/junlim954 Listing files... Anaconda3-2022.05-Linux-x86_64.sh anaconda3 spring-portfolio Anaconda3-2022.05-Linux-x86_64.sh.1 ijava-1.3.0.zip vscode Anaconda3-2022.05-Linux-x86_64.sh.2 install.py Anaconda3-2022.05-Linux-x86_64.sh.3 java Anaconda version: conda 4.13.0 Npm version: 3.10.10 Available kernels: bash /home/junlim954/.local/share/jupyter/kernels/bash java /home/junlim954/.local/share/jupyter/kernels/java javascript /home/junlim954/.local/share/jupyter/kernels/javascript python3 /home/junlim954/.local/share/jupyter/kernels/python3 . Hack 3 - Updating a Repository . cd ~/vscode/fastpages echo &quot;Checking remote...&quot; git remote -v echo &quot;Pulling...&quot; git pull echo &quot;Staging changes...&quot; git add . git status echo &quot;Committing changes...&quot; git commit -a git push . Checking remote... origin https://github.com/peacekeeper6/fastpages.git (fetch) origin https://github.com/peacekeeper6/fastpages.git (push) Pulling... Already up to date. Staging changes... On branch master Your branch is up to date with &#39;origin/master&#39;. Changes to be committed: (use &#34;git restore --staged &lt;file&gt;...&#34; to unstage) modified: _notebooks/2022-08-25-bashnb.ipynb new file: _notebooks/2022-08-26-test-notebook.ipynb new file: _notebooks/2022-08-27-tests.md Committing changes... . Hack 4 - Automating package installation process . cd # sudo apt update # sudo apt upgrade PYTHON3=$(python3 --version) PYTHON2=$(python2 --version) JAVA=$(java --version) JAVAC=$(javac --version) echo &quot;Checking for Python2...&quot; if [ ! -d $PYTHON2 ] then echo &quot;Downloading Python2&quot; # sudo apt install python2 fi echo &quot;Python2 exists&quot; echo &quot;Checking for Python3...&quot; if [ ! -d $PYTHON3 ] then echo &quot;Downloading Python3&quot; # sudo apt install python3 fi echo &quot;Python3 exists&quot; echo &quot;Checking for Java...&quot; if [ ! -d $JAVA ] then echo &quot;Downloading Java&quot; # sudo apt install default-jdk fi echo &quot;Java exists&quot; echo &quot;Checking for Javac&quot; if [ ! -d $JAVAC ] then echo &quot;Downloading Javac&quot; # sudo apt install default-jre fi # sudo apt install unzip . [sudo] password for junlim954: . Hack 5 - Automating the creating and opening of Jupyter Notebooks . cd ~/vscode/fastpages/_notebooks ls echo &quot;&quot; echo &quot;Creating new notebook...&quot; echo &quot;&quot; file=&quot;2022-08-26-test-notebook.ipynb&quot; touch &quot;$file&quot; ls # echo &quot;Loading notebook to make edits...&quot; # nano &quot;$file&quot; echo &quot;&quot; echo &quot;Loading all notebooks...&quot; echo &quot;&quot; jupyter notebook exit 0 . 2020-02-20-test.ipynb 2022-08-25-bashnb.ipynb ghtop_images 2022-08-22-javanb.ipynb 2022-08-26-test-notebook.ipynb my_icons 2022-08-22-pythonnb.ipynb 2022-08-27-tests.md 2022-08-24-primitives.ipynb README.md Creating new notebook... 2020-02-20-test.ipynb 2022-08-25-bashnb.ipynb ghtop_images 2022-08-22-javanb.ipynb 2022-08-26-test-notebook.ipynb my_icons 2022-08-22-pythonnb.ipynb 2022-08-27-tests.md 2022-08-24-primitives.ipynb README.md Loading all notebooks... [I 2022-08-27 12:22:33.999 LabApp](B JupyterLab extension loaded from /home/junlim954/anaconda3/lib/python3.9/site-packages/jupyterlab [I 2022-08-27 12:22:34.000 LabApp](B JupyterLab application directory is /home/junlim954/anaconda3/share/jupyter/lab [I 12:22:34.004 NotebookApp](B Serving notebooks from local directory: /home/junlim954/vscode/fastpages/_notebooks [I 12:22:34.004 NotebookApp](B Jupyter Notebook 6.4.8 is running at: [I 12:22:34.004 NotebookApp](B http://localhost:8888/?token=c0543c7efe3bdfa6d245cbd214aeb96915d2d613bcf9b52d [I 12:22:34.004 NotebookApp](B or http://127.0.0.1:8888/?token=c0543c7efe3bdfa6d245cbd214aeb96915d2d613bcf9b52d [I 12:22:34.004 NotebookApp](B Use Control-C to stop this server and shut down all kernels (twice to skip confirmation). [C 12:22:34.095 NotebookApp](B To access the notebook, open this file in a browser: file:///home/junlim954/.local/share/jupyter/runtime/nbserver-3870-open.html Or copy and paste one of these URLs: http://localhost:8888/?token=c0543c7efe3bdfa6d245cbd214aeb96915d2d613bcf9b52d or http://127.0.0.1:8888/?token=c0543c7efe3bdfa6d245cbd214aeb96915d2d613bcf9b52d . cd ~/vscode/fastpages/_notebooks #Mr. M example using .md files instead file=&quot;2022-08-27-tests.md&quot; if [ -f &quot;$file&quot; ] || [ -e &quot;$file&quot;]; then rm $file fi tee -a $file &lt;&lt;EOF title: Test Notebook description: I am testing making notebook categories: [jupyter] # Test Notebook &gt; A test notebook made using bash EOF defaults=(&quot;- toc: true&quot;, &quot;- badges: true&quot;, &quot;- comments: true&quot;, &quot;- categories: [primitives]&quot;, &quot;- image: images/primitivess.jpg&quot;) for default in ${defaults[@]}; do echo &quot;- $default&quot; &gt;&gt; $file done echo &quot;&quot; echo &quot;File listing and status&quot; ls -l $file # list file wc $file # show words ls . title: Test Notebook description: I am testing making notebook categories: [jupyter] # Test Notebook &gt; A test notebook made using bash File listing and status -rw-r--r-- 1 junlim954 junlim954 280 Aug 27 12:20 2022-08-27-tests.md 22 53 280 2022-08-27-tests.md 2020-02-20-test.ipynb 2022-08-25-bashnb.ipynb ghtop_images 2022-08-22-javanb.ipynb 2022-08-26-test-notebook.ipynb my_icons 2022-08-22-pythonnb.ipynb 2022-08-27-tests.md 2022-08-24-primitives.ipynb README.md .",
            "url": "https://peacekeeper6.github.io/fastpages/bash/2022/08/25/bashnb.html",
            "relUrl": "/bash/2022/08/25/bashnb.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Primitives Notebook",
            "content": "Wrapper Classes . Java likes everything to have classes | Wrapper classes are a way to use primitive data types like int, char, byte, etc | Wrapper classes also have methods while primitives do not Methods are built-in and do certain actions like convert string to int | . | Luckily primitives are not OOP, unlike everything else in Java | . // java style to import library import java.util.Scanner; // class must alway have 1st letter as uppercase, CamelCase is Java Class convention public class ScanPrimitives { public static void main(String[] args) { Scanner input; // primitive int input = new Scanner(System.in); System.out.print(&quot;Enter an integer: &quot;); try { int sampleInputInt = input.nextInt(); System.out.println(sampleInputInt); } catch (Exception e) { // if not an integer System.out.println(&quot;Not an integer (form like 159), &quot; + e); } input.close(); // primitive double input = new Scanner(System.in); System.out.print(&quot;Enter a double: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); // primitive boolean input = new Scanner(System.in); System.out.print(&quot;Enter a boolean: &quot;); try { boolean sampleInputBoolean = input.nextBoolean(); System.out.println(sampleInputBoolean); } catch (Exception e) { // if not true or false System.out.println(&quot;Not an boolean (true or false), &quot; + e); } input.close(); // wrapper class String input = new Scanner(System.in); System.out.print(&quot;Enter a String: &quot;); try { String sampleInputString = input.nextLine(); System.out.println(sampleInputString); } catch (Exception e) { // this may never happen System.out.println(&quot;Not an String, &quot; + e); } input.close(); } } ScanPrimitives.main(null); . Enter an integer: 5 Enter a double: 335.0 Enter a boolean: Not an boolean (true or false), java.util.InputMismatchException Enter a String: . &gt; Points per game, PPG, calculator . | # Hack illegal character: &#39;#&#39; | &gt; Points per game, PPG, calculator illegal start of expression . import java.util.Scanner; public class ScanPPG { public static void main(String[] args) { Scanner input; input = new Scanner(System.in); System.out.print(&quot;Enter a Player: &quot; + System.lineSeparator()); // personal note: do not use ln when making input String name = input.nextLine(); try { System.out.println(&quot;Nice choice, unless you chose Steph Curry&quot;); } catch (Exception e) { System.out.println(&quot;Not a name&quot;); } input.close(); System.out.println(&quot;Get ready to break out the Google...&quot;); input = new Scanner(System.in); System.out.print(&quot;How many total points did your player score?&quot; + System.lineSeparator()); double points = input.nextInt(); try { System.out.println(&quot;Not bad&quot;); } catch (Exception e) { System.out.println(&quot;Not a number&quot;); } input.close(); input = new Scanner(System.in); System.out.print(&quot;How many games did your player play?&quot; + System.lineSeparator()); double games = input.nextInt(); try { System.out.println(&quot;That&#39;s a lot&quot;); } catch (Exception e) { System.out.println(&quot;Not a number&quot;); } input.close(); double PPG = points/games; double rounded = Math.round(PPG * 10.0) / 10.0; System.out.println(name + &quot; averaged &quot; + rounded + &quot; points a game&quot;); } } ScanPPG.main(null); . Enter a Player: Nice choice, unless you chose Steph Curry Get ready to break out the Google... How many total points did your player score? Not bad How many games did your player play? That&#39;s a lot Paul George averaged 24.3 points a game .",
            "url": "https://peacekeeper6.github.io/fastpages/primitives/2022/08/24/primitives.html",
            "relUrl": "/primitives/2022/08/24/primitives.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Week 1 - Tools Setup",
            "content": "Hacks . Fastpages . Python Jupyter Notebook | Java Jupyter Notebook | | | Github Insights for Fastpages | Github Insights for Java Project | . Java Project . | First commit | .",
            "url": "https://peacekeeper6.github.io/fastpages/markdown/2022/08/22/tools.html",
            "relUrl": "/markdown/2022/08/22/tools.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Python Notebook",
            "content": "print(&quot;Hello World!&quot;) . Hello World! .",
            "url": "https://peacekeeper6.github.io/fastpages/python/2022/08/22/pythonnb.html",
            "relUrl": "/python/2022/08/22/pythonnb.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Java Notebook",
            "content": "public class Main { public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); } } Main.main(null) . Hello World! .",
            "url": "https://peacekeeper6.github.io/fastpages/java/2022/08/22/javanb.html",
            "relUrl": "/java/2022/08/22/javanb.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . ModuleNotFoundError Traceback (most recent call last) /home/junlim954/vscode/fastpages/_notebooks/2020-02-20-test.ipynb Cell 8 in &lt;cell line: 3&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/junlim954/vscode/fastpages/_notebooks/2020-02-20-test.ipynb#X10sdnNjb2RlLXJlbW90ZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; #collapse-hide &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/junlim954/vscode/fastpages/_notebooks/2020-02-20-test.ipynb#X10sdnNjb2RlLXJlbW90ZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; import pandas as pd -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/junlim954/vscode/fastpages/_notebooks/2020-02-20-test.ipynb#X10sdnNjb2RlLXJlbW90ZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; import altair as alt ModuleNotFoundError: No module named &#39;altair&#39; . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . | #collapse-show illegal character: &#39;#&#39; . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . | # display table with pandas illegal character: &#39;#&#39; | # display table with pandas &#39;;&#39; expected . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://peacekeeper6.github.io/fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://peacekeeper6.github.io/fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "THIS IS A MARKDOWN TEST. . NOW THIS IS A MARKDOWN COMMIT TEST USING VSCODE. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://peacekeeper6.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://peacekeeper6.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}